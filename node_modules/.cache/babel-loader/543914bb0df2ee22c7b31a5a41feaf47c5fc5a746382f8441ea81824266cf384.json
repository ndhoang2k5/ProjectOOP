{"ast":null,"code":"// File: ../../service/mockApi.js\n\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:7000';\n\n// Hàm xử lý lỗi chung\nconst handleError = (error, featureName = \"không xác định\") => {\n  console.error(`Lỗi API khi thực hiện chức năng \"${featureName}\":`, error);\n  if (error.response) {\n    alert(`Lỗi từ server (${error.response.status}): ${error.response.data}`);\n  } else if (error.request) {\n    alert('Lỗi: Không thể kết nối tới server. Vui lòng kiểm tra lại backend có đang chạy không.');\n  } else {\n    alert(`Lỗi không xác định khi ${featureName}.`);\n  }\n  throw error;\n};\n\n// ===================================================================\n// --- API CHO SÁCH ---\n// ===================================================================\n\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n * Tên hàm là `searchBooks` nhưng logic bên trong sẽ gọi API lấy TẤT CẢ sách,\r\n * vì backend chưa hỗ trợ tìm kiếm.\r\n */\nexport const searchBooks = async query => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/books`);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 404) return [];\n    handleError(error, \"tìm kiếm sách\");\n  }\n};\n\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n */\nexport const addBook = async bookData => {\n  const tempId = Date.now();\n  const bookName = encodeURIComponent(bookData.title);\n  const bookQuantity = bookData.quantityInStock;\n  const url = `${API_BASE_URL}/books/add/${tempId}/${bookName}/${bookQuantity}`;\n  try {\n    const response = await axios.post(url, {});\n    return response.data;\n  } catch (error) {\n    handleError(error, \"thêm sách\");\n  }\n};\n\n// ===================================================================\n// --- API CHO SINH VIÊN ---\n// ===================================================================\n\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n * Tên hàm là `getStudentStatus` nhưng logic bên trong đã được sửa lại\r\n * để gọi thẳng đến API getStudentById của backend.\r\n */\nexport const getStudentStatus = async studentId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/students/${studentId}`);\n    return {\n      student: response.data,\n      activeBorrows: [] // Tạm thời vì chưa có API mượn sách\n    };\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      alert(`Không tìm thấy sinh viên với mã: ${studentId}`);\n      return null;\n    }\n    handleError(error, `tìm sinh viên mã ${studentId}`);\n  }\n};\n\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n */\nexport const addStudent = async studentData => {\n  try {\n    const payload = {\n      studentName: studentData.name,\n      studentAge: studentData.age || 0,\n      studentEmail: studentData.email || null\n    };\n    const response = await axios.post(`${API_BASE_URL}/students`, payload);\n    alert(\"Thêm sinh viên thành công!\");\n    return response.data;\n  } catch (error) {\n    handleError(error, \"thêm sinh viên\");\n  }\n};\n\n// ===================================================================\n// --- API CHO MƯỢN/TRẢ SÁCH ---\n// ===================================================================\n\n/**\r\n * [THÊM LẠI HÀM BỊ THIẾU]\r\n * Thêm lại hàm này để không bị lỗi biên dịch.\r\n * Logic bên trong chỉ hiện thông báo vì backend chưa hỗ trợ.\r\n */\nexport const createBorrowing = async () => {\n  const message = `Chức năng \"Tạo phiếu mượn\" chưa được cài đặt ở backend.`;\n  console.error(message);\n  alert(message);\n};\n\n/**\r\n * [THÊM LẠI HÀM BỊ THIẾU]\r\n * Thêm lại hàm này để không bị lỗi biên dịch.\r\n */\nexport const endBorrowing = async () => {\n  const message = `Chức năng \"Trả sách\" chưa được cài đặt ở backend.`;\n  console.error(message);\n  alert(message);\n};","map":{"version":3,"names":["axios","API_BASE_URL","handleError","error","featureName","console","response","alert","status","data","request","searchBooks","query","get","addBook","bookData","tempId","Date","now","bookName","encodeURIComponent","title","bookQuantity","quantityInStock","url","post","getStudentStatus","studentId","student","activeBorrows","addStudent","studentData","payload","studentName","name","studentAge","age","studentEmail","email","createBorrowing","message","endBorrowing"],"sources":["D:/projectOOP/src/service/mockApi.js"],"sourcesContent":["// File: ../../service/mockApi.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:7000';\r\n\r\n// Hàm xử lý lỗi chung\r\nconst handleError = (error, featureName = \"không xác định\") => {\r\n  console.error(`Lỗi API khi thực hiện chức năng \"${featureName}\":`, error);\r\n  if (error.response) {\r\n    alert(`Lỗi từ server (${error.response.status}): ${error.response.data}`);\r\n  } else if (error.request) {\r\n    alert('Lỗi: Không thể kết nối tới server. Vui lòng kiểm tra lại backend có đang chạy không.');\r\n  } else {\r\n    alert(`Lỗi không xác định khi ${featureName}.`);\r\n  }\r\n  throw error;\r\n};\r\n\r\n\r\n// ===================================================================\r\n// --- API CHO SÁCH ---\r\n// ===================================================================\r\n\r\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n * Tên hàm là `searchBooks` nhưng logic bên trong sẽ gọi API lấy TẤT CẢ sách,\r\n * vì backend chưa hỗ trợ tìm kiếm.\r\n */\r\nexport const searchBooks = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/books`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 404) return [];\r\n    handleError(error, \"tìm kiếm sách\");\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n */\r\nexport const addBook = async (bookData) => {\r\n  const tempId = Date.now();\r\n  const bookName = encodeURIComponent(bookData.title);\r\n  const bookQuantity = bookData.quantityInStock;\r\n  const url = `${API_BASE_URL}/books/add/${tempId}/${bookName}/${bookQuantity}`;\r\n  try {\r\n    const response = await axios.post(url, {});\r\n    return response.data;\r\n  } catch (error) {\r\n    handleError(error, \"thêm sách\");\r\n  }\r\n};\r\n\r\n\r\n// ===================================================================\r\n// --- API CHO SINH VIÊN ---\r\n// ===================================================================\r\n\r\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n * Tên hàm là `getStudentStatus` nhưng logic bên trong đã được sửa lại\r\n * để gọi thẳng đến API getStudentById của backend.\r\n */\r\nexport const getStudentStatus = async (studentId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/students/${studentId}`);\r\n    return {\r\n      student: response.data,\r\n      activeBorrows: [] // Tạm thời vì chưa có API mượn sách\r\n    };\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      alert(`Không tìm thấy sinh viên với mã: ${studentId}`);\r\n      return null;\r\n    }\r\n    handleError(error, `tìm sinh viên mã ${studentId}`);\r\n  }\r\n};\r\n\r\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n */\r\nexport const addStudent = async (studentData) => {\r\n  try {\r\n    const payload = {\r\n      studentName: studentData.name,\r\n      studentAge: studentData.age || 0,\r\n      studentEmail: studentData.email || null\r\n    };\r\n    const response = await axios.post(`${API_BASE_URL}/students`, payload);\r\n    alert(\"Thêm sinh viên thành công!\");\r\n    return response.data;\r\n  } catch (error) {\r\n    handleError(error, \"thêm sinh viên\");\r\n  }\r\n};\r\n\r\n\r\n// ===================================================================\r\n// --- API CHO MƯỢN/TRẢ SÁCH ---\r\n// ===================================================================\r\n\r\n/**\r\n * [THÊM LẠI HÀM BỊ THIẾU]\r\n * Thêm lại hàm này để không bị lỗi biên dịch.\r\n * Logic bên trong chỉ hiện thông báo vì backend chưa hỗ trợ.\r\n */\r\nexport const createBorrowing = async () => {\r\n  const message = `Chức năng \"Tạo phiếu mượn\" chưa được cài đặt ở backend.`;\r\n  console.error(message);\r\n  alert(message);\r\n};\r\n\r\n/**\r\n * [THÊM LẠI HÀM BỊ THIẾU]\r\n * Thêm lại hàm này để không bị lỗi biên dịch.\r\n */\r\nexport const endBorrowing = async () => {\r\n  const message = `Chức năng \"Trả sách\" chưa được cài đặt ở backend.`;\r\n  console.error(message);\r\n  alert(message);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}