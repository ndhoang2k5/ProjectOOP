{"ast":null,"code":"// File: ../../service/mockApi.js\n\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:7000';\n\n// Hàm xử lý lỗi chung\nconst handleError = (error, featureName = \"không xác định\") => {\n  console.error(`Lỗi API khi thực hiện chức năng \"${featureName}\":`, error);\n  if (error.response) {\n    alert(`Lỗi từ server (${error.response.status}): ${error.response.data}`);\n  } else if (error.request) {\n    alert('Lỗi: Không thể kết nối tới server. Vui lòng kiểm tra lại backend có đang chạy không.');\n  } else {\n    alert(`Lỗi không xác định khi ${featureName}.`);\n  }\n  throw error;\n};\n\n// ===================================================================\n// --- API CHO SÁCH ---\n// ===================================================================\n\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n * Tên hàm là `searchBooks` nhưng logic bên trong sẽ gọi API lấy TẤT CẢ sách,\r\n * vì backend chưa hỗ trợ tìm kiếm.\r\n */\nexport const searchBooks = async query => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/books`);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 404) return [];\n    handleError(error, \"tìm kiếm sách\");\n  }\n};\n\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n */\nexport const addBook = async bookData => {\n  try {\n    // Gửi yêu cầu POST đến `/api/books` (hoặc `/books` nếu bạn không dùng /api)\n    // Toàn bộ thông tin sách nằm trong body của request dưới dạng JSON\n    const response = await axios.post(`${API_BASE_URL}/books`, bookData);\n    return response.data;\n  } catch (error) {\n    handleError(error, \"thêm sách\");\n  }\n};\n\n/**\r\n * Hàm này sẽ xóa một cuốn sách theo ID.\r\n * @param {*} bookId \r\n * @returns \r\n */\nexport const deleteBook = async bookId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/books/${bookId}`);\n    return response.data;\n  } catch (error) {\n    handleError(error, \"xóa sách\");\n  }\n};\n\n// ===================================================================\n// --- API CHO SINH VIÊN ---\n// ===================================================================\n\n/**\r\n * lấy thông tin của một sinh viên dựa trên ID.\r\n * @param {*} studentId \r\n * @returns\r\n  \r\nexport const addStudent = async (studentData) => {\r\n  try {\r\n    const payload = {\r\n      studentId: parseInt(studentData.studentId, 10) || 0,\r\n      studentName: studentData.name,\r\n      studentAge: parseInt(studentData.age, 10) || 0,\r\n      studentEmail: studentData.email || null\r\n    };\r\n    const response = await axios.post(`${API_BASE_URL}/students`, payload);\r\n    return response.data; // Không có alert ở đây\r\n  } catch (error) {\r\n    handleError(error, \"thêm sinh viên\");\r\n  }\r\n};\r\n\r\n/**\r\n * Cập nhật thông tin của một sinh viên dựa trên ID.\r\n */\nexport const updateStudent = async (studentId, studentData) => {\n  try {\n    const payload = {\n      studentName: studentData.name,\n      studentAge: parseInt(studentData.age, 10),\n      studentEmail: studentData.email\n    };\n    const response = await axios.put(`${API_BASE_URL}/students/${studentId}`, payload);\n    return response.data; // Không có alert ở đây\n  } catch (error) {\n    handleError(error, `cập nhật sinh viên mã ${studentId}`);\n  }\n};\n\n// ===================================================================\n// --- API CHO MƯỢN/TRẢ SÁCH ---\n// ===================================================================\n\n// ... (phần đầu file giữ nguyên) ...\n\n// ===================================================================\n// --- API CHO MƯỢN/TRẢ SÁCH ---\n// ===================================================================\n\nexport const createBorrowing = async (studentId, bookId) => {\n  try {\n    const payload = {\n      studentId: parseInt(studentId, 10),\n      bookId: parseInt(bookId, 10)\n    };\n    // URL chuẩn: POST /borrows\n    const response = await axios.post(`${API_BASE_URL}/borrows`, payload);\n    return response.data;\n  } catch (error) {\n    handleError(error, \"tạo phiếu mượn\");\n  }\n};\nexport const returnBook = async borrowingId => {\n  try {\n    // URL chuẩn: PUT /borrows/{id}/return\n    const response = await axios.put(`${API_BASE_URL}/borrows/${borrowingId}/return`);\n    return response.data;\n  } catch (error) {\n    handleError(error, \"trả sách\");\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","handleError","error","featureName","console","response","alert","status","data","request","searchBooks","query","get","addBook","bookData","post","deleteBook","bookId","delete","updateStudent","studentId","studentData","payload","studentName","name","studentAge","parseInt","age","studentEmail","email","put","createBorrowing","returnBook","borrowingId"],"sources":["D:/ProjectOOP-nam/src/service/mockApi.js"],"sourcesContent":["// File: ../../service/mockApi.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:7000';\r\n\r\n// Hàm xử lý lỗi chung\r\nconst handleError = (error, featureName = \"không xác định\") => {\r\n  console.error(`Lỗi API khi thực hiện chức năng \"${featureName}\":`, error);\r\n  if (error.response) {\r\n    alert(`Lỗi từ server (${error.response.status}): ${error.response.data}`);\r\n  } else if (error.request) {\r\n    alert('Lỗi: Không thể kết nối tới server. Vui lòng kiểm tra lại backend có đang chạy không.');\r\n  } else {\r\n    alert(`Lỗi không xác định khi ${featureName}.`);\r\n  }\r\n  throw error;\r\n};\r\n\r\n\r\n// ===================================================================\r\n// --- API CHO SÁCH ---\r\n// ===================================================================\r\n\r\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n * Tên hàm là `searchBooks` nhưng logic bên trong sẽ gọi API lấy TẤT CẢ sách,\r\n * vì backend chưa hỗ trợ tìm kiếm.\r\n */\r\nexport const searchBooks = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/books`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 404) return [];\r\n    handleError(error, \"tìm kiếm sách\");\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * [GIỮ NGUYÊN TÊN HÀM]\r\n */\r\nexport const addBook = async (bookData) => {\r\n  try {\r\n    // Gửi yêu cầu POST đến `/api/books` (hoặc `/books` nếu bạn không dùng /api)\r\n    // Toàn bộ thông tin sách nằm trong body của request dưới dạng JSON\r\n    const response = await axios.post(`${API_BASE_URL}/books`, bookData);\r\n    return response.data;\r\n  } catch (error) {\r\n    handleError(error, \"thêm sách\");\r\n  }\r\n};\r\n\r\n/**\r\n * Hàm này sẽ xóa một cuốn sách theo ID.\r\n * @param {*} bookId \r\n * @returns \r\n */\r\nexport const deleteBook = async (bookId) => {\r\n  try {\r\n    const response = await axios.delete(`${API_BASE_URL}/books/${bookId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    handleError(error, \"xóa sách\");\r\n  }\r\n};\r\n\r\n\r\n// ===================================================================\r\n// --- API CHO SINH VIÊN ---\r\n// ===================================================================\r\n\r\n/**\r\n * lấy thông tin của một sinh viên dựa trên ID.\r\n * @param {*} studentId \r\n * @returns\r\n  \r\nexport const addStudent = async (studentData) => {\r\n  try {\r\n    const payload = {\r\n      studentId: parseInt(studentData.studentId, 10) || 0,\r\n      studentName: studentData.name,\r\n      studentAge: parseInt(studentData.age, 10) || 0,\r\n      studentEmail: studentData.email || null\r\n    };\r\n    const response = await axios.post(`${API_BASE_URL}/students`, payload);\r\n    return response.data; // Không có alert ở đây\r\n  } catch (error) {\r\n    handleError(error, \"thêm sinh viên\");\r\n  }\r\n};\r\n\r\n/**\r\n * Cập nhật thông tin của một sinh viên dựa trên ID.\r\n */\r\nexport const updateStudent = async (studentId, studentData) => {\r\n  try {\r\n    const payload = {\r\n      studentName: studentData.name,\r\n      studentAge: parseInt(studentData.age, 10),\r\n      studentEmail: studentData.email\r\n    };\r\n    const response = await axios.put(`${API_BASE_URL}/students/${studentId}`, payload);\r\n    return response.data; // Không có alert ở đây\r\n  } catch (error) {\r\n    handleError(error, `cập nhật sinh viên mã ${studentId}`);\r\n  }\r\n};\r\n\r\n\r\n// ===================================================================\r\n// --- API CHO MƯỢN/TRẢ SÁCH ---\r\n// ===================================================================\r\n\r\n// ... (phần đầu file giữ nguyên) ...\r\n\r\n// ===================================================================\r\n// --- API CHO MƯỢN/TRẢ SÁCH ---\r\n// ===================================================================\r\n\r\nexport const createBorrowing = async (studentId, bookId) => {\r\n  try {\r\n    const payload = {\r\n      studentId: parseInt(studentId, 10),\r\n      bookId: parseInt(bookId, 10),\r\n    };\r\n    // URL chuẩn: POST /borrows\r\n    const response = await axios.post(`${API_BASE_URL}/borrows`, payload);\r\n    return response.data;\r\n  } catch (error) {\r\n    handleError(error, \"tạo phiếu mượn\");\r\n  }\r\n};\r\n\r\nexport const returnBook = async (borrowingId) => {\r\n  try {\r\n    // URL chuẩn: PUT /borrows/{id}/return\r\n    const response = await axios.put(`${API_BASE_URL}/borrows/${borrowingId}/return`);\r\n    return response.data;\r\n  } catch (error) {\r\n    handleError(error, \"trả sách\");\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}